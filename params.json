{
  "name": "gojsonrpc",
  "tagline": "A library for working with JSON-RPC APIs in Go.",
  "body": "[![GoDoc Reference](https://godoc.org/github.com/asib/gojsonrpc?status.svg)](https://godoc.org/github.com/asib/gojsonrpc)\r\n[![Build Status](https://travis-ci.org/asib/gojsonrpc.svg?branch=master)](https://travis-ci.org/asib/gojsonrpc)\r\n[![Coverage Status](https://coveralls.io/repos/github/asib/gojsonrpc/badge.svg?branch=master)](https://coveralls.io/github/asib/gojsonrpc?branch=master)\r\n[![GitHub tag](https://img.shields.io/github/tag/asib/gojsonrpc.svg?maxAge=2592000)]()\r\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg?style=plastic)](https://raw.githubusercontent.com/asib/gojsonrpc/master/LICENSE)\r\n\r\nA library for working with JSON-RPC APIs in Go.\r\n\r\n## Installation\r\n\r\nTo install, run\r\n\r\n```bash\r\n$ go get -u github.com/asib/gojsonrpc\r\n```\r\n\r\n## Example\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\r\n\t\"github.com/asib/gojsonrpc\"\r\n)\r\n\r\nfunc handleRequest(req *gojsonrpc.Request) (resp *gojsonrpc.Response) {\r\n\tif req.Method() == \"login\" {\r\n\t\tparams := req.Params().(map[string]interface{})\r\n\r\n\t\tif params[\"user\"] == \"asib\" && params[\"password\"] == \"pass123\" {\r\n\t\t\tresp = gojsonrpc.MakeResponseWithResult(map[string]bool{\"success\": true}, req.ID())\r\n\t\t} else {\r\n\t\t\tresp = gojsonrpc.MakeResponseWithResult(map[string]bool{\"success\": false}, req.ID())\r\n\t\t}\r\n\t}\r\n\r\n\treturn\r\n}\r\n\r\nfunc main() {\r\n\traw := `{\"jsonrpc\":\"2.0\", \"method\":\"login\", \"params\":{\"user\":\"asib\", \"password\":\"pass123\"}, \"id\":1}`\r\n\tmsg, err := gojsonrpc.ParseIncoming(raw)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tswitch msg.(type) {\r\n\tcase *gojsonrpc.Notification:\r\n\t\t// do stuff here\r\n\tcase *gojsonrpc.Request:\r\n\t\trawResp, err := json.Marshal(handleRequest(msg.(*gojsonrpc.Request)))\r\n\t\tif err != nil {\r\n\t\t\tpanic(err)\r\n\t\t} else {\r\n\t\t\tfmt.Println(string(rawResp))\r\n\t\t}\r\n\tcase *gojsonrpc.Response:\r\n\t\t// do stuff here\r\n\tdefault:\r\n\t  // handle error case\r\n\t}\r\n}\r\n```\r\n\r\n## Documentation\r\n\r\nVisit the [godoc](https://godoc.org/github.com/asib/gojsonrpc) page.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}